package de.avci.joride.jbeans.auxiliary;

import java.io.Serializable;

import javax.faces.bean.SessionScoped;
import javax.inject.Named;

/**  Class to calculate timespans from day:hour:minute field.
 *   This may especially be used as a backing
 *   for the timespan between "startTimeEarlies"
 *   and startTimeLatest in rideRequests
 * 
 * 
 * @author jochen
 *
 */

@Named("timespan")
@SessionScoped


public class TimespanBean implements Serializable {

	/** nummer of milliseconds in Minute 
	 */
	public static final  long millisInMinute = 60000l;
	
	/** nummer of milliseconds in Hour
	 */
	
	public static final  long millisInHour = 60 * millisInMinute;
	
	/** nummer of milliseconds in Day 
	 */
	public static final  long millisInDay = 24 * millisInHour;

	/**
	 * Autogenerated
	 */
	private static final long serialVersionUID = 1L;


	
	/** Number of minutes
	 */
	private long minutes;
	
	/** Number of hours
	 */
	private long hours;
	
	/** Number of days
	 */
	private long days;
	
	
	/**
	 * return number of miliseconds in given Numbers of days/hours/minutes
	 * 
	 */
	public long getTime() {

		return (millisInDay * getDays() + millisInHour * getHours() + millisInMinute
				* getMinutes());
	}
	
	
	/** set time in milliseconds, normalize fields.
	 *  Call Math.round to get even number of minutes
	 */
	public void setTime(long millis){
	
		this.setMinutes( Math.round(millis/millisInMinute));
		this.normalize();
	}
	
	

	/** Normalize Days/hours/minutes fields, i.e rearrange minutes, hours/ days
	 *  so that minutes are in 0..59, hours are in 0..23 keeping the overalltime.
	 * 
	 */
	public void normalize() {

		// normalize Minutes
		long offsetHours = (getMinutes() - (getMinutes() % 60)) / 60;
		setMinutes(getMinutes() % 60);
		setHours(getHours() + offsetHours);
		// normalize hours
		long offsetDays = (getHours() - (getHours() % 24)) / 24;
		setHours(getHours() % 24);
		setDays(getDays() + offsetDays);
	}

	/**  String valued debug
	 * 
	 */
	public String debugPrintout() {

		this.normalize();
		return " " + getDays() + " days " + getHours() + ":" + getMinutes();
	}
	
	/** Default constructor with minutes/hours/days =0 
	 * 
	 */
	public TimespanBean(){
		super();
		this.setMinutes(0);
		this.setHours(0);
		this.setDays(0);
	}
	
	/** Construct a new Timespan bean with normalized field from 
	 *  time interval given in miliseconds initially.
	 *  
	 *  
	 * @param millis
	 */
	public TimespanBean(long millis){
		
		this();
		this.normalize();
	}


	public long getMinutes() {
		return minutes;
	}


	public void setMinutes(long minutes) {
		this.minutes = minutes;
	}


	public long getHours() {
		return hours;
	}


	public void setHours(long hours) {
		this.hours = hours;
	}


	public long getDays() {
		return days;
	}


	public void setDays(long days) {
		this.days = days;
	}

}
