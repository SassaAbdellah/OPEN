<project name="joride-public" default="build">

	<!--**** ****************************************** **** -->
	<!--**** Buildfile for joride-public webapp **** -->
	<!--**** this is in fact a subset of the **** -->
	<!--**** joride webapp. **** -->
	<!--**** note, that much of the code is copied from **** -->
	<!--**** ../joride/ for good reasons **** -->
	<!--**** ******************************************** **** -->


	<property environment="env" />
	<property file="build.properties" />
	<property file="${app}/tomcat.properties" />
	<property name="appdir" value="${basedir}" />
	<property name="build.dir" value="${appdir}/build" />
	<property name="web.inf.dir" value="${build.dir}/WEB-INF/" />
	<property name="dist.dir" value="${appdir}/dist" />
	<property name="warfile" value="${dist.dir}/${ant.project.name}.war" />

	<path id="classpath">
		<fileset dir="${appdir}">
			<include name="lib/build/*.jar" />
		</fileset>
		<!-- include classes from ejb project -->
		<pathelement location="../OpenRideServer-ejb/dist/OpenRideServer-ejb.jar" />

		<!-- external jars from ejb project -->
		<fileset dir="../OpenRideServer-ejb/libs/">
			<include name="*.jar" />
		</fileset>

		<!-- include jee libs from some glassfish -->

		<fileset
			dir="../OpenRideShareMaster/build.headless.support/jee/libs.glassfish.3.0.2/">
			<include name="*.jar" />
		</fileset>

	</path>



	<!-- *********************************************************************************** -->
	<!-- *** directories needed for synchonizing and cleaning *** -->
	<!-- *** directory where the joride project lives and where things are copied 
		from *** -->
	<!-- *********************************************************************************** -->
	<property name="joride.dir" value="../joride/" />
	<!-- webdir of joride project -->
	<property name="joride.web.dir" value="${joride.dir}/web" />


	<!-- all the jfaces templates and sections will be imported from joride -->
	<property name="templates.dir" value="${build.dir}/templates/" />

	

	<!-- ***************************************************************** -->
	<!-- **** create build.dir and populate it with locale jsf pages **** -->
	<!-- **** this must be done before synchronizing **** -->
	<!-- ***************************************************************** -->

	<target name="prepare" description="Create build and dist directory.">
		<delete dir="${build.dir}" />

		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.dir}/WEB-INF" />
		<mkdir dir="${build.dir}/WEB-INF/classes" />
		<mkdir dir="${dist.dir}" />


		<copy todir="${build.dir}" failonerror="true" verbose="true">
			<fileset dir="${appdir}/web" />
		</copy>

		<copy todir="${build.dir}/WEB-INF" failonerror="false" verbose="true">
			<fileset dir="${appdir}">
				<include name="lib/**" />
			</fileset>
		</copy>

	</target> <!-- end of target prepare -->



	<!-- **************************************************** -->
	<!-- *** synchronize, copy things from other projects *** -->
	<!-- **************************************************** -->
	<target name="synchronize" depends="prepare"
		description="Synchronize with joride project">


		<!-- completely synchronize ${build.dir}/resources directory with joride -->
		<!-- all the resources (javascript, images, css) will be imported from 
			joride -->
		<property name="resources.dir" value="${build.dir}/resources/" />


		<delete dir="${resources.dir}" />
		<copy todir="${resources.dir}">
			<fileset dir="${joride.web.dir}/resources/" />
		</copy>

		<!-- In addition, if there is an individual css, overwrite defaultCSS -->

		<!--Overwrite default css if localStyle has been defined elsewhere -->
		<available
			file="../OpenRideShareMaster/local.resources/css/local.styles.css"
			property="overwriteCSS" />
		<antcall target="overwriteCSS" inheritAll="true" inheritRefs="true" />


		<!-- completely synchronize web/templates directory with joride -->
		<delete dir="${templates.dir}" />
		<copy todir="${templates.dir}">
			<fileset dir="${joride.web.dir}/templates/" />
		</copy>


		<!-- synchronize coookiemessage and footer but not header and navigation 
			bar -->
		<property name="sections.dir" value="${build.dir}/sections/joride/" />

		<copy todir="${sections.dir}">
			<fileset file="${joride.web.dir}/sections/joride/cookieMessage.xhtml" />
		</copy>

		<copy todir="${sections.dir}">
			<fileset file="${joride.web.dir}/sections/joride/footer.xhtml" />
		</copy>

		<!-- lib directory for joride-public -->
		<property name="lib.dir" value="${web.inf.dir}/lib" />
		<!-- webdir of joride project -->
		<property name="joride.lib.dir" value="${joride.dir}/lib" />
		

		<!-- completely synchronize lib directory with joride -->
		<delete dir="${lib.dir}" />
		<copy todir="${lib.dir}">
			<fileset dir="${joride.lib.dir}" />
		</copy>

		<!-- copy joride.jar from joride main project -->
		<copy todir="${lib.dir}">
			<fileset file="${joride.dir}/dist/joride.jar" />
		</copy>


		<!-- web/public/ dir be imported from joride -->
		<property name="web.public.dir" value="${build.dir}/public/" />
		
		<!-- completely synchronize web/public/ directory with joride -->
		<delete dir="${web.public.dir}" />
		<copy todir="${web.public.dir}">
			<fileset dir="${joride.web.dir}/public/" />
		</copy>


	</target> <!-- end of "synchronize target" -->



	<!-- **************************************************** -->
	<!-- *** overwrite css and theme settings if applies *** -->
	<!-- **************************************************** -->
	<!-- ** Overwrite CSS is called from synchronize target ** -->
	<!-- ** overwrtiteCSS property is also set from synchronize target ** -->
	<target name="overwriteCSS" if="overwriteCSS"
		description="overwrite css if user defined css is present">

		<property name="targetCSS" value="${build.dir}/resources/css/styles.css" />

		<echo message="Found individual CSS file, Overwriting ${targetCSS}" />
		<copy file="../OpenRideShareMaster/local.resources/css/local.styles.css"
			tofile="${targetCSS}" overwrite="true" verbose="true" />
	</target>

	<!-- TARGET overwriteTheme -->
	<!-- overwrite Theme will overwrite the settings for theme in web.xml -->
	<!-- this task will be executed only if jquery.ui.theme parameter -->
	<!-- in local.properties is set by the user -->
	<target name="overwriteTheme" if="jquery.ui.theme"
		description="overwrite primefaces theme on user request">

		<echo
			message="Found individual theme setting, overwriting default theme to ${jquery.ui.theme}" />
		<property name="webxmlFile" value="${build.dir}/WEB-INF/web.xml" />

		<!-- applying url of OpenLayers library -->
		<replaceregexp byline="true">
			<regexp pattern="aristo" />
			<substitution expression="${jquery.ui.theme}" />
			<fileset file="${webxmlFile}" />
		</replaceregexp>

	</target>



	<target name="jsf-libs" if="use-jsf-libs" unless="glassfish">
		<mkdir dir="${build.dir}/WEB-INF/lib" />
		<copy file="${jsf.api.jar}" todir="${build.dir}/WEB-INF/lib"
			verbose="true" />
		<copy file="${jsf.impl.jar}" todir="${build.dir}/WEB-INF/lib"
			verbose="true" />
	</target>

	<target name="el-libs" if="use-el-libs" unless="glassfish">
		<copy file="${el.api.jar}" todir="${build.dir}/WEB-INF/lib"
			verbose="true" failonerror="false" />
		<copy file="${el.impl.jar}" todir="${build.dir}/WEB-INF/lib"
			verbose="true" failonerror="false" />
	</target>

	<target name="bean-validation-libs" if="use-bean-validation-libs"
		unless="glassfish">
		<copy file="${bean-validation.impl.jar}" todir="${build.dir}/WEB-INF/lib"
			verbose="true" failonerror="false" />
		<copy todir="${build.dir}/WEB-INF/lib" verbose="true"
			failonerror="false">
			<fileset dir="${bean-validation.lib.dir}">
				<include name="*.jar" />
			</fileset>
		</copy>
	</target>

	<target name="cdi-libs" if="use-cdi-libs" unless="glassfish">
		<copy file="${cdi.impl.jar}" todir="${build.dir}/WEB-INF/lib"
			verbose="true" failonerror="false" />
	</target>

	<target name="tomcat-libs" depends="jsf-libs, el-libs, bean-validation-libs, cdi-libs" />



	<target name="war" depends="clean,prepare,synchronize,tomcat-libs"
		description="Build WAR file.">
		<delete file="${warfile}" />

		<!--Overwrite default jquery-ui theme if user preferes non default theme -->
		<antcall target="overwriteTheme" inheritAll="true"
			inheritRefs="true" />
		<!-- ***************************************************************************************************** -->
		<!-- include all the jars in OpenRideShareMaster/local.resources/themes 
			directory, so that custom themes will be supported -->
		<mkdir dir="${web.inf.dir}/lib" />
		<copy todir="${web.inf.dir}/lib" verbose="true">
			<fileset dir="../OpenRideShareMaster/local.resources/themes/">
				<include name="*.jar" />
			</fileset>
		</copy>

		<jar jarfile="${warfile}" basedir="${build.dir}" />
	</target>


	<target name="build" depends="war" description="build the binaries">
	</target>

	<target name="dist" depends="build"
		description="create the distributables, but do not deploy">

	</target>




	<target name="clean" description="Clean build and dist directory">
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
	</target>


</project>



