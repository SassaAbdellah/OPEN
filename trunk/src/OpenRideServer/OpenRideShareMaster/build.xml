<?xml version="1.0" encoding="UTF-8"?>
<project name="OpenRideServer" default="all" basedir=".">

	<description>Builds the project OpenRideServer</description>

	<!-- local.properties will always be sourced -->
	<property file="local.properties" />

	<!-- directory where we assemble the stuff before it goes to the ear -->
	<property name="build.dir" value="build" />


	<!-- dist.dir is the directory where the ear gets created -->
	<property name="dist.dir" value="dist" />

	<!-- bin.dir is the binary directory where classes get compiled to  -->
	<property name="bin.dir" value="bin" />

	<!-- ************************************************************************ -->
	<!-- **** joride target is only to be build if build.joride param is set **** -->
	<!-- ************************************************************************ -->
	<target name="joride" description="build the joride subproject" if="build.joride">

		<echo> *** building joride subproject  *** </echo>

		<ant dir="../joride" antfile="build.xml" />
		<copy file="../joride/dist/joride.war" todir="${build.dir}" />
	</target>
	<!-- joride -->




	<!-- ************************************************************************************** -->
	<!-- **** joride-public target is only to be build if build.joride-public param is set **** -->
	<!-- ************************************************************************************** -->
	<target name="joride-public" description="build the joride-public subproject" if="build.joride-public">

		<echo> *** building joride-public subproject  *** </echo>

		<ant dir="../joride-public" antfile="build.xml" />
		<copy file="../joride-public/dist/joride-public.war" todir="${build.dir}" />
	</target>
	<!-- joride-public  -->

	
	<!-- ************************************************************************************** -->
	<!-- **** joride-mobile target is only to be build if build.joride-mobile param is set **** -->
	<!-- ************************************************************************************** -->
	<target name="joride-mobile" description="build the joride-mobile subproject" if="build.joride-mobile">

		<echo> *** building joride-mobile subproject  *** </echo>

		<ant dir="../joride-mobile" antfile="build.xml" />
		<copy file="../joride-mobile/dist/joride-mobile.war" todir="${build.dir}" />
	</target>
	<!-- joride-mobile  -->





	<!-- ****************************************************************************************** -->
	<!-- **** ors-rest-ugly target is only to be build if build.ors-rest-ugly param is set     **** -->
	<!-- ****************************************************************************************** -->
	<target name="ors-rest-ugly" description="build the ors-rest-ugly subproject" if="build.ors-rest-ugly">

		<echo> *** building ors-rest-ugly subproject  *** </echo>

		<ant dir="../ors-rest-ugly" antfile="build.xml" />
		<copy file="../ors-rest-ugly/dist/ors-rest-ugly.war" todir="${build.dir}" />
	</target>
	<!-- ors-rest-ugly  -->



	<!-- ******************************************** -->
	<!-- ***  target "dist": create the ear file  *** -->
	<!-- ******************************************** -->

	<target name="dist" description=" target dist: create the ear file ">

		<!-- assemble stuff in build.dir -->
		<mkdir dir="${build.dir}" />


		<!--build OpenRideServer      subproject  ************************************************ -->
		<ant dir="../OpenRideServer-ejb" antfile="build.xml" />
		<copy file="../OpenRideServer-ejb/dist/OpenRideServer-ejb.jar" todir="${build.dir}" />


		<!--build joride subproject                  ************************************************* -->
		<antcall target="joride" inheritAll="true" inheritRefs="true" />

		<!--build joride-public subproject           ************************************************* -->
		<antcall target="joride-public" inheritAll="true" inheritRefs="true" />

		<!--build ors-rest-ugly subproject            ************************************************* -->
		<antcall target="ors-rest-ugly" inheritAll="true" inheritRefs="true" />







		<!-- Add libraries *********************************************************************** -->
		<copy todir="${build.dir}/lib">
			<fileset dir="../OpenRideServer-ejb/libs">
				<include name="**/*.jar" />
				<include name="**/*.docx" />
			</fileset>
		</copy>




		<!-- create destination directory -->
		<mkdir dir="${dist.dir}" />


		<jar destfile="${dist.dir}/${ant.project.name}.ear">
			<fileset dir="${build.dir}" />

		</jar>

	</target>
	<!-- end of target "dist" -->



	<!-- ********************************************************* -->
	<!-- *** target clean: cleanup dist and build directories  *** -->
	<!-- ********************************************************* -->

	<target name="clean" description="cleanup build artefacts">
		<delete dir="${dist.dir}" />
		<delete dir="${build.dir}" />
		<delete dir="${bin.dir}" />



		<!--clean  subprojects  ***************************************************** -->
		<ant dir="../OpenRideServer-ejb" antfile="build.xml" target="clean" />
		<ant dir="../joride" antfile="build.xml" target="clean" />
		<ant dir="../joride-public" antfile="build.xml" target="clean" />
		<ant dir="../ors-rest-ugly" antfile="build.xml" target="clean" />


	</target>
	<!-- end of target clean -->


	<!-- ******************************************* -->
	<!-- ***  target "all":  do clean, then dist *** -->
	<!-- ******************************************* -->

	<target name="all" depends="clean,dist" description="first clean, then dist..." />








	<!-- ***************************************************** -->
	<!-- *** target i18n create internationalisation utils *** -->
	<!-- *** this is outside of the "all" target           *** -->
	<!-- ***************************************************** -->

	<target name="i18n" depends="dist" description="Create translation utilities">


		<!-- Include libraries from joride and OpenRideServer subprojects-->

		<path id="class.path">
			<pathelement path="${classpath}" />

			<fileset dir="../joride/lib">
				<include name="**/*.jar" />
			</fileset>
	
			<fileset file="../joride/dist/joride.jar" />

			<fileset dir="../OpenRideServer-ejb/libs">
				<include name="**/*.jar" />
			</fileset>
			
			<fileset file="../OpenRideServer-ejb/dist/OpenRideServer-ejb.jar" /> 
			
		</path>


		

		<!-- create a few classes in bin -->

		<mkdir dir="${bin.dir}" />

		<javac 
			srcdir="src/java/main" 
			destdir="${bin.dir}" 
			classpathref="class.path"
			includeantruntime="false"
			/>
		

		<!-- **************************   -->
		<!-- create OpenRideShareMaster   -->
		<!-- **************************   -->

		<jar destfile="dist/OpenRideShareMaster.jar">
			<fileset dir="${bin.dir}" />
		</jar>

	</target>







</project>
